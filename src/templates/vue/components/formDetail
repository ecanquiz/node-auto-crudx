<script setup lang="ts">
import { toRaw } from "vue"
import useForm<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %> from "../../composables/<%= fn.uCamelCase(fn.singular(tableMaster)); %>/useForm<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %>";
// import type { RadioOption } from "@/types/RadioOption";
import type { <%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %> } from "../../types/<%= pathModule %>/<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %>";

const props = defineProps<{
  <%= fn.singular(tableDetailCurrent.tableName); %>: <%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %>
  // saleTypeOptions: RadioOption[]
  // statusOptions: RadioOption[]
}>()

const {
  form,

  v$
} = useForm<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %>(props.<%= fn.singular(tableDetailCurrent.tableName); %>)

const emits = defineEmits<{
  (e: 'submit<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)) %>', form: <%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)); %>): void
}>()

const submit<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)) %> = async () => {
  const result = await v$.value.$validate();
  if (result) {
    emits("submit<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)) %>", toRaw(form));
  }
}
</script>

<template>
  <div>
    <form @submit.prevent="submit<%= fn.uCamelCase(fn.singular(tableDetailCurrent.tableName)) %>"> 
      <div class="p-5 grid lg:grid-cols-2 gap-4">

          <% tableDetailCurrent.tableStructureOfDetails[0].forEach(function(field) {
            if  (!['id', 'created_at', 'updated_at', 'deleted_at'].includes(field.column_name)) { 
              if (field.data_type === "character varying") {%>  <div class="block">     
                <AppInput           
                  v-model="form.<%= field.column_name; %>"
                  label="<%= field.column_name; %>"
                  type="text"
                  :error="v$.<%= field.column_name; %>.$error ? v$.<%= field.column_name; %>.$errors[0].$message : null"

                />
              </div>
              <%} else if ((field.data_type === "text")) {%>  <div class="block">     
                <AppTextarea
                  label="<%= field.column_name; %>"
                  v-model="form.<%= field.column_name; %>"
                  :error="v$.<%= field.column_name; %>.$error ? v$.<%= field.column_name; %>.$errors[0].$message : null"
                />
              </div>
              <%} else if ((field.data_type === "bigint")) {%>  <div class="block">     
                <AppSelect
                  v-if="<%= tableMasterForeignKeysAssoc.find(element => element.column_name === field.column_name).foreign_table_name; %>"
                  :options="<%= tableMasterForeignKeysAssoc.find(element => element.column_name === field.column_name).foreign_table_name; %>"
                  v-model="form.<%= field.column_name; %>"
                  label="<%= field.column_name; %>"
                  :error="v$.<%= field.column_name; %>.$error ? v$.<%= field.column_name; %>.$errors[0].$message : null"
                />
              </div>
              <%} else if ((field.data_type === "boolean")) {%>  <div class="block">     
                <AppCheckbox
                  v-model="form.<%= field.column_name; %>"
                  label="<%= field.column_name; %>"
                  :error="v$.<%= field.column_name; %>.$error ? v$.<%= field.column_name; %>.$errors[0].$message : null"
                />
              </div>
              <%}%>
            <%}});%>










          <!--label>Tipo de Venta</label><br/>
          <AppRadioGroup
            v-model="form.status"
            name="status"
            :options="props.statusOptions"
            :error="v$.status.$error ? v$.status.$errors[0].$message : null"           
          /-->
      
        <!--div class="block">
          <AppTextarea
            label="Empaque"
            v-model="form.packing_deployed"                
            @focus="isOpenModal = !isOpenModal"                
            readonly
            :error="v$.packing_deployed.$error ? v$.packing_deployed.$errors[0].$message : null"
          />
          <AppInput
            v-model="form.packing_json"          
            type="hidden"          
          />                        
        </div-->       
      </div>
      <div class="block flex justify-center">
        <AppBtn
          type="submit"                 
          data-testid="submit-btn"
          class="btn btn-primary"
          text="Agregar"
        />        
      </div> 
    </form>    
  </div>
</template>
