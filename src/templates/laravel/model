<?php

namespace Modules\<%= pathModule; %>\Entities;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Model;

class <%= tableMasterSingularUCamelCase; %> extends Model
{
    use HasFactory, SoftDeletes;

    protected $connection = 'pgsql_<%= pathModule.toLowerCase(); %>';

    protected $fillable = [<%
    tableStructure.forEach(function(field, index) {
        if  (!['created_at', 'updated_at', 'deleted_at'].includes(field.column_name)) { 
    %>
        '<%= field.column_name; %>'<%= index < tableStructure.length-4 ? ',' : '' %><%
        }});
    %> 
    ];

    protected $hidden = ['created_at', 'updated_at', 'deleted_at'];

    protected $casts = [ /* 'field_name' => 'field_type' */ ];
    <% if (tableMasterForeignKeysAssoc.length) { %>
    protected $with = [<% tableMasterForeignKeysAssoc.forEach(function(tbl, index){
    %>'<%= tbl.foreignTableNameSingular; %>'<%= index < tableMasterForeignKeysAssoc.length-1 ? ',' : '' %><%
    }); %>];
    <%}%>
    <% tableMasterForeignKeysAssoc.forEach(function(tbl){
    %>public function <%= tbl.foreignTableNameSingular; %>()
    {
        return $this->belongsTo(\Modules\<%= pathModule; %>\Entities\<%= tbl.foreignTableNameSingularUCamelCase; %>::class);
    } 
    <%});
    %>
    protected static function newFactory()
    {
        return \Modules\<%= pathModule; %>\Database\Factories\<%= tableMasterSingularUCamelCase; %>Factory::new();
    }

    /*
        public function myChild()
        {
            return $this->hasMany(MyChild::class);
        }
    */
}
