<?php

namespace Modules\<%= pathModule; %>\Entities;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Model;

class <%= tableDetailCurrent.tableNameSingularUCamelCase; %> extends Model
{
    use HasFactory, SoftDeletes;

    protected $connection = 'pgsql_<%= pathModule.toLowerCase(); %>';

    protected $fillable = [<% tableDetailCurrent.tableStructureOfDetails[0].forEach(function(field, index) {
      if  (fun.val.includeAt(field.column_name)) {%>
        '<%- field.column_name; %>'<%= fun.addCommaToArr(tableStructure, index, 0) -%>
    <%}});%> 
    ];

    protected $hidden = ['created_at', 'updated_at', 'deleted_at'];

    protected $casts = [ /* 'field_name' => 'field_type' */ ];
        
    public function <%= tableMasterSingular; %>()
    {
        return $this->belongsTo(\Modules\<%= pathModule; %>\Entities\<%= tableMasterSingularUCamelCase; %>::class);
    }  

    protected static function newFactory()
    {
        return \Modules\<%= pathModule; %>\Database\Factories\<%= tableDetailCurrent.tableNameSingularUCamelCase; %>Factory::new();
    }
}
