<?php

namespace Modules\<%= pathModule; %>\Http\Controllers;

use Illuminate\Contracts\Support\Renderable;
use Illuminate\Http\{Request, JsonResponse};
use Illuminate\Routing\Controller;
use Modules\<%= pathModule; %>\Http\Resources\<%= fn.uCamelCase(fn.singular(tableMaster)); %>Resource;
use Modules\<%= pathModule; %>\Http\Requests\<%= fn.uCamelCase(fn.singular(tableMaster)); %>\{
    Store<%= fn.uCamelCase(fn.singular(tableMaster)); %>Request,
    Update<%= fn.uCamelCase(fn.singular(tableMaster)); %>Request
};
use Modules\<%= pathModule; %>\Http\Services\<%= fn.uCamelCase(fn.singular(tableMaster)); %>\{
    Store<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service,
    Index<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service,
    Update<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service
};
use Modules\<%= pathModule; %>\Entities\<%= fn.uCamelCase(fn.singular(tableMaster)); %>;

class <%= fn.uCamelCase(fn.singular(tableMaster)); %>Controller extends Controller
{
    /*
     * Display a listing of the resource.
     */
    public function index(Request $request): JsonResponse
    {
        return Index<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service::execute($request);
    }

    /**
     * Store a newly created resource in storage.
     */ 
    public function store(Store<%= fn.uCamelCase(fn.singular(tableMaster)); %>Request $request): JsonResponse
    {
        return Store<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service::execute($request);
    }

    /**
     * Display the specified resource.
    */
    public function show(<%= fn.uCamelCase(fn.singular(tableMaster)); %> $<%= tableMasterSingular; %>): <%= fn.uCamelCase(fn.singular(tableMaster)); %>Resource | JsonResponse
    {
        return new <%= fn.uCamelCase(fn.singular(tableMaster)); %>Resource($<%= tableMasterSingular; %>);
    }

    /**
     * Update the specified resource in storage.
     */     
    public function update(Update<%= fn.uCamelCase(fn.singular(tableMaster)); %>Request $request, <%= fn.uCamelCase(fn.singular(tableMaster)); %> $<%= tableMasterSingular; %>): JsonResponse
    {
        return Update<%= fn.uCamelCase(fn.singular(tableMaster)); %>Service::execute($request, $<%= tableMasterSingular; %>);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Request $request): JsonResponse
    {      
        <%= fn.uCamelCase(fn.singular(tableMaster)); %>::destroy($request->id);
        return response()->json(204);
    }

    /*
     * Display a listing of the resource to help.
     */
    public function help(): JsonResponse
    {
        return response()->json(<%= fn.uCamelCase(fn.singular(tableMaster)); %>::all());
    }
}
